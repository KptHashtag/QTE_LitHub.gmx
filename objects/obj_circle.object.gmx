<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
text = ""
distance = 0
pts = 0
x = room_width/2
y = room_height/2
fcol = c_white
scol = c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_self()
draw_set_font(font0)
draw_set_halign(fa_center)
draw_text(x, y - sprite_width, text)
draw_set_halign(fa_left)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dist = sprite_width/2
var perfect = dist * .1
var great = dist * .25
var good = dist * .35
var ok = dist * .7
var bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
if(instance_exists(obj_target)){
    if(collision_circle(x,y, dist, instance_nearest(x,y,obj_target), true, true)){
        var t = instance_nearest(x,y,obj_target);
        if(between(t.x, x - perfect, x) || between(t.x, x + perfect, x)){
            pts += 100
            text = "Perfect!#" + string(pts)
            scol = fcol
            fcol = c_aqua
            bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
            instance_destroy(t)
        }else if(between(t.x, x - great, x - perfect) || between(t.x, x + great, x + perfect)){
            pts += 75
            text = "Great!#" + string(pts)
            scol = fcol
            fcol = c_lime
            bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
            instance_destroy(t)
        }else if(between(t.x, x - good, x - great) || between(t.x, x + great, x + perfect)){
            pts += 50
            text = "Good!#" + string(pts)
            scol = fcol
            fcol = c_green
            bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
            instance_destroy(t)
        }else if(between(t.x, x - ok, x - good) || between(t.x, x + great, x + perfect)){
            pts += 25
            text = "OK!#" + string(pts)
            scol = fcol
            fcol = c_yellow
            bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
            instance_destroy(t)
        }else{
            pts += 10
            text = "BAD!#" + string(pts)
            scol = fcol
            fcol = c_orange
            bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
            instance_destroy(t)
        }
        instance_create(-50, room_height/2,obj_target)
    }else{
        pts += -10
        text = "QUE?!#" + string(pts)
        scol = fcol
        fcol = c_red
        bg = background_create_gradient(room_width,room_height, fcol, scol, 0)
            background_index[0] = bg
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
